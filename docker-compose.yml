version: "3.8"

services:
  landing-backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOTNET_VERSION: "${DOTNET_VERSION:-8.0}"
    image: oro-landing-backend:latest
    restart: unless-stopped
    environment:
      # Set the ASPNET Core env (Development / Production)
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      # Port the app listens on inside the container (matches Dockerfile ASPNETCORE_URLS)
      - ASPNETCORE_URLS=http://+:5000
      # Connection string(s) for the app. Replace or set in .env
      - ConnectionStrings__Default=${CONNECTIONSTRING_DEFAULT}
      # Example additional env vars (uncomment / add as needed)
      # - Logging__LogLevel__Default=Information
    ports:
      - "${HOST_PORT:-5000}:5000"
    depends_on:
      # uncomment the DB service you use
      - mssql-db
      # - postgres-db
    networks:
      - oro-net
    # Uncomment healthcheck if your app exposes an HTTP health endpoint (e.g. /health).
    # healthcheck:
    #   test: ["CMD-SHELL", "wget -q -O- http://localhost:5000/health || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    volumes:
      - dotnet_store:/root/.nuget/packages # optionally cache nuget packages between builds (useful for local dev)

  #########################
  # Microsoft SQL Server #
  #########################
  mssql-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${MSSQL_SA_PASSWORD:-Your_strong!Passw0rd}
      - MSSQL_PID=Express
    ports:
      - "${MSSQL_HOST_PORT:-1433}:1433"
    volumes:
      - mssql_data:/var/opt/mssql
    networks:
      - oro-net

  #########################
  # PostgreSQL (optional) #
  #########################
  # postgres-db:
  #   image: postgres:15
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER:-landing}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-landingpass}
  #     - POSTGRES_DB=${POSTGRES_DB:-landingdb}
  #   ports:
  #     - "${POSTGRES_HOST_PORT:-5432}:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - oro-net

networks:
  oro-net:
    driver: bridge

volumes:
  mssql_data:
  postgres_data:
  dotnet_store: